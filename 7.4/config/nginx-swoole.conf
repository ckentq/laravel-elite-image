user root root;
worker_processes auto;
worker_rlimit_nofile 1000000;
error_log stderr warn;
pid /run/nginx.pid;

events {
    worker_connections 100000;
}

http {
    include mime.types;
    default_type application/octet-stream;

    # Define custom log format to include reponse times
    log_format main_timed '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for" '
                          '$request_time $upstream_response_time $pipe $upstream_cache_status';

    access_log /proc/1/fd/1 main_timed;
    error_log /proc/1/fd/2 notice;

    keepalive_timeout 65;
    client_max_body_size 128M;

    # Write temporary files to /tmp so they can be created as a non-privileged user
    client_body_temp_path /tmp/client_temp;
    proxy_temp_path /tmp/proxy_temp_path;
    fastcgi_temp_path /tmp/fastcgi_temp;
    uwsgi_temp_path /tmp/uwsgi_temp;
    scgi_temp_path /tmp/scgi_temp;

    # Hide NGINX Server Version from Header
    server_tokens off;

    # Use X-Forwarded-Proto, Check https
    map $http_x_forwarded_proto $detect_https {
        default "";
        https "on";
    }

    map $http_x_forwarded_proto $detect_x_forwarded_proto {
        default $scheme;
        https "https";
    }

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    # Default server definition
    server {
        listen [::]:80 default_server;
        listen 80 default_server;
        server_name _;

        sendfile off;

        # HTTP Security Headers
        add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains; preload';
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Content-Type-Options nosniff;

        root /var/www/public;
        index index.php index.html;

        location / {
            try_files $uri $uri/ @swoole;
        }

        location = /index.php {
            # Ensure that there is no such file named "not_exists" in your "public" directory.
            try_files /not_exists @swoole;
        }

        # Pass to Swoole listening on 127.0.0.1:7780
        location @swoole {
            set $suffix "";

            if ($uri = /index.php) {
                set $suffix ?$query_string;
            }

            proxy_http_version 1.1;
            proxy_set_header Host $http_host;
            proxy_set_header Scheme $detect_x_forwarded_proto;
            proxy_set_header SERVER_PORT $server_port;
            proxy_set_header REMOTE_ADDR $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;

            proxy_pass http://127.0.0.1:7780$suffix;
        }

        # Pass the PHP scripts to PHP-FPM listening on 127.0.0.1:9000
        location ~ \.php$ {
            try_files $uri =404;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass 127.0.0.1:9000;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param SCRIPT_NAME $fastcgi_script_name;
            fastcgi_param HTTPS $detect_https;
            fastcgi_buffer_size 128k;
            fastcgi_buffers 4 256k;
            fastcgi_busy_buffers_size 256k;
            fastcgi_index index.php;
            include fastcgi_params;
        }

        # Redirect server error pages to the static page /50x.html
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /var/lib/nginx/html;
        }

        # Media: images, icons, video, audio send expires headers
        location ~* \.(?:jpg|jpeg|gif|png|heic|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webp|webm)$ {
          expires 1M;
          access_log off;
          add_header Cache-Control "public";
        }

        # Web fonts send expires headers
        location ~* \.(?:eot|otf|ttf|woff|woff2)$ {
          expires 3M;
          access_log off;
          add_header Cache-Control "public";
        }

        # CSS and Javascript send expires headers.
        location ~* \.(?:css|js)$ {
          expires 1y;
          access_log off;
          add_header Cache-Control "public";
        }

        # Deny access to . files, for security
        location ~ /\. {
            log_not_found off;
            deny all;
        }
    }

    gzip on;
    gzip_proxied any;
    gzip_types text/plain application/xml text/css text/js text/xml application/x-javascript text/javascript application/json application/xml+rss;
    gzip_vary on;
    gzip_disable "msie6";

    # Include other server configs
    include /etc/nginx/conf.d/*.conf;
}
